--------------------------
         En Mac

Sistema operativo: Windows 11 Home Single Language
Versión: 11
Fecha: 13 de Mayo del 2024
Proyecto: iasd
Descripción del proyecto: Proyecto iglesia adventista del séptimo día

Requisitos
-wsl
-Docker desktop = 4.29.0
-Docker engine = 26.0.0
-Workbench ó
-dbeaver >= 23.1.5.202308201919
-git >= 2.39.2
--------------------------
1.-Instalar Debian con WSL
--------------------------
Abrir PowerShell

wsl --install -d debian

Establecemos el nombre de usuario y contraseña
Cuando termine abrimos una nueva ventana, seleccionamos debian

sudo apt-get update
sudo apt-get upgrade
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

VERSION_STRING=5:26.0.0-1~debian.12~bookworm
sudo apt-get install docker-ce=$VERSION_STRING docker-ce-cli=$VERSION_STRING containerd.io docker-buildx-plugin docker-compose-plugin

sudo service docker start
--------------------------
2.-Compartir un volumen
--------------------------
Ir a "Este equipo" y clic en "Conectar a una unidad de red"
\\wsl$\Debian
--------------------------
3.-Crear las carpeta raíz
--------------------------
proyecto_iasd
En la carpeta raíz crer 3 carpetas con los siguientes nombre
	bd
	api
	app
--------------------------
4.-Crear el contenedor para la base de datos
--------------------------
docker pull mysql:8.0.34
docker run --name iasd_bd -e MYSQL_ROOT_PASSWORD=juan -p 3307:3306 -e MYSQL_ROOT_HOST=% -v /home/juan/proyecto_iasd/bd:/var/lib/mysql -d mysql:8.0.34
--------------------------
5.-Crear el contenedor para la API
--------------------------
cd /home/juan/proyecto_iasd/api
docker pull juancholll/iasd_api
sudo docker run -v /home/juan/proyecto_iasd/api:/home/demo -p 8080:80 -it --name iasd_api 64c45e73b66f /bin/bash
exit
git clone https://github.com/carlosjuanco/zeus-api.git
docker ps -a
docker start 64fc106127cd
docker attach 64fc106127cd
cd /home/demo/zeus-api
composer require laravel/framework:9.52.15
php artisan --version
#Si copio el archivo con el comando cp hay problemas de permisos
// Copiar el contenido del archivo cp .env.example y crear .env y poner lo que se copio
php artisan key:generate
composer require doctrine/dbal:3.8.4
//  Creamos la base de datos 
//  y ponemos los datos en el archivo .env

DB_CONNECTION=mysql
DB_HOST=172.17.0.2 //Ip del contenedor de la BD
DB_PORT=3306 //Puerto del contenedor (adentro)
DB_DATABASE=iasd
DB_USERNAME=root
DB_PASSWORD=juan

php artisan migrate:fresh --seed
exit
cd zeus-api
git checkout test
docker start 64fc106127cd
docker attach 64fc106127cd
cd /home/demo/zeus-api
php artisan test
exit
git checkout main
docker start 64fc106127cd
docker attach 64fc106127cd
cd /home/demo/zeus-api
php artisan serve --host=172.17.0.3 --port=80
Escribir en el navegador http://localhost:8080
--------------------------
6.-Crear el contenedor para la APP
--------------------------
// En otra ventana de la terminal
docker pull node:20.14.0
docker run -v /home/juan/proyecto_iasd/app:/home/demo -p 8081:81 -it --name iasd_app 4881ae721235 /bin/bash
exit
cd /home/juan/proyecto_iasd/app
git clone https://github.com/carlosjuanco/meca-app.git
docker ps -a
docker start cd178fc9b009
docker attach cd178fc9b009
cd home/demo/meca-app
npm install
#Si creamos el archivo con el comando
#touch "VUE_APP_BASE_URL=/" > .env
#Se presentan problemas de permisos
// Creamos el archivo y ponemos el contenido 
En el archivo main.ts a la variable axios.defaults.baseURL = 'http://localhost:8080/api', establecer la url del contenedor api
npm run serve -- --port 81
Escribir en el navegador http://localhost:8081